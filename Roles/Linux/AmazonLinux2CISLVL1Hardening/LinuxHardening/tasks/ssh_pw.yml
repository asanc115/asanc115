---
# Section 5 SSH and Password configurations
- name: Ensure permissions on SSH private host key files are configured #5.3.2
  ansible.builtin.file:
    path: "{{ item }}"
    state: file
    owner: root
    group: root
    mode: '0600'
  with_items:
    - /etc/ssh/ssh_host_ecdsa_key
    - /etc/ssh/ssh_host_ed25519_key
    - /etc/ssh/ssh_host_rsa_key

- name: Set the sshd_configs straight #5.3.4-21
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^DenyUsers nope'
      line: "DenyUsers nope"
    - regexp: '^MaxAuthTries'
      line: "MaxAuthTries 4"
    - regexp: '^PermitRootLogin'
      line: "PermitRootLogin no"
    - regexp: '^Ciphers'
      line: "Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr"
    - regexp: '^MACs'
      line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256"
    - regexp: '^KexAlgorithms'
      line: "KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256"
    - regexp: '^ClientAliveInterval'
      line: "ClientAliveInterval 900"
    - regexp: '^ClientAliveCountMax'
      line: "ClientAliveCountMax 0"
    - regexp: '^LoginGraceTime'
      line: "LoginGraceTime 60"
    - regexp: '^Banner'
      line: "Banner /etc/issue.net"
    - regexp: '^maxstartups'
      line: "maxstartups 10:30:60"
    - regexp: '^LogLevel'
      line: "LogLevel INFO"
  notify: ssh

- name: Ensure password creation requirements exist in pwquality.conf #5.4.1
  ansible.builtin.lineinfile:
    path: /etc/security/pwquality.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^ucredit ="
      line: "ucredit = -1"
    - regexp: "^lcredit ="
      line: "lcredit = -1"
    - regexp: "^dcredit ="
      line: "dcredit = -1"
    - regexp: "^ocredit = -1"
      line: "ocredit = -1"
    - regexp: "^minclass ="
      line: "minclass = 4"
    - regexp: "^minlen ="
      line: "minlen = 14"

- name: Ensure password creation requirements exist in pam.d #5.4.1
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - src: templates/password-auth.j2
      dest: /etc/pam.d/password-auth
    - src: templates/system-auth.j2
      dest: /etc/pam.d/system-auth
 
- name: Ensure login.defs meets password min, max, umask, usergroups CIS Requirements #5.5.1.1 #5.5.1.2 #5.5.5
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^PASS_MIN_DAYS'
      line: "PASS_MIN_DAYS 1"
    - regexp: '^PASS_MAX_DAYS'
      line: "PASS_MAX_DAYS 365"
    - regexp: '^UMASK'
      line: "UMASK 077"
    - regexp: '^USERGROUPS_ENAB'
      line: "USER_GROUPS_ENAB no"

- name: Register list of local users with gid's between 1000 and 2000 #Pre Req 5.5.1.1--2
  shell: "{{ users }}"
  register: users

- name: Ensure local users passwords are restricted to 24 hrs/1 day min lifetime. #5.5.1.2
  ansible.builtin.user:
    name: "{{ item }}"
    password_expire_min: 1
  with_items: "{{ users.stdout_lines }}"

- name: Ensure local users passwords are restricted to 60 day max lifetime. #5.5.1.1
  ansible.builtin.user:
    name: "{{ item }}"
    password_expire_max: 365
  with_items: "{{ users.stdout_lines }}"

- name: Register INACTIVE value #pre-req 5.5.1.4
  shell: useradd -D | grep INACTIVE
  register: inact

- name: Ensure inactive password lock is 30 days or less #5.5.1.4
  command: useradd -D -f 30
  when: inact.stdout != "INACTIVE=30"
  notify: chage

