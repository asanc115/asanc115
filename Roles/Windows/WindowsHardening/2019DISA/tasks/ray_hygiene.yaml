---

    - name: Ensure Temporary Directory exists for neccessary files
      ansible.windows.win_file:
        path: C:\Tempz
        state: directory

    - name: Copy RTX Certs into Temp Directory
      ansible.windows.win_copy:
        src: files/Raytheon_Cert_Bundle-current.zip
        dest: C:\Tempz\

    - name: Unzip RTX Certs
      community.windows.win_unzip:
        src: C:\Tempz\Raytheon_Cert_Bundle-current.zip
        dest: C:\Tempz

    - name: Ensure Raytheon Root Certs are installed in Trusted Root Certificate Store
      ansible.windows.win_certificate_store:
        path: "{{ item }}"
        key_storage: machine
        store_name: Root
      with_items:
        - C:\Tempz\RaytheonCertBundle\PEM\rtnroot-G2_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtxroot-G3_01.cer

    - name: Ensure Raytheon Root Certs are installed in Trusted Root Certificate Store
      ansible.windows.win_certificate_store:
        path: "{{ item }}"
        key_storage: machine
        store_name: CertificateAuthority
      with_items:
        - C:\Tempz\RaytheonCertBundle\PEM\rtngbl03.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnservices-G2_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnorion02.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnclass2-G2_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnclass3-G2_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\proxy-G2.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnusa03.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnusa04.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtncdn01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnbbn01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnhut01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtnhuu01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtxclass2-G3_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtxclass3-G3_01.cer
        - C:\Tempz\RaytheonCertBundle\PEM\rtxservices-G3_01.cer

    - name: Clean up
      ansible.windows.win_file:
        path: C:\Tempz
        state: absent

    - name: Configure IE proxy settings to apply to all users
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings
        name: ProxySettingsPerUser
        data: 0
        type: dword
        state: present

    - name: Ensure Proxy set
      community.windows.win_inet_proxy:
        auto_detect: no
        proxy: http://proxy.ext.ray.com:80
        bypass:
        - <local>
        - "*.ray.com"
        - pki.raytheon.com
        - 10.250.*

    - name: Import IE proxy configuration to WinHTTP
      win_http_proxy:
        source: ie

    - name: Ensure Trusted Sites configured correctly
      ansible.windows.win_regedit:
        path: "{{ item }}"
      with_items:
        - HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\microsoft.com\*.download.windowsupdate
        - HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\aws.ray.com\*usdcag

    - name: Specify more details on Trusted Sites (http/https etc.)
      ansible.windows.win_regedit:
        path: "{{ item.path }}"
        name: "{{ item.name }}"
        data: 2
        type: dword
      with_items:
        - path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\microsoft.com\*.download.windowsupdate
          name: http
        - path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\aws.ray.com\*usdcag
          name: '*'

    - name: Ensure USDCAG WSUS is configured as an update server
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
        name: "{{ item.name }}"
        data: "{{ item.data }}"
        type: "{{ item.type }}"
      with_items:
        - name: SetProxyBehaviorForUpdateDetection
          data: 0
          type: dword
        - name: UpdateServiceUrlAlternate
          data: ''
          type: string
        - name: WUServer
          data: 'http://dcag-wsus01.usdcag.aws.ray.com:8530'
          type: string
        - name: WUStatusServer
          data: 'http://dcag-wsus01.usdcag.aws.ray.com:8530'
          type: string

    - name: Ensure Server is configured to use USDCAG WSUS Server
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
        name: UseWUServer
        value: 1

    - name: Ensure Windows Defender FallbackOrder for updates is set correctly
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Signature Updates
        name: FallbackOrder
        value: InternalDefinitionUpdateServer|MicrosoftUpdateServer|MMPC
        type: string

    - name: Ensure Windows Update Service is restarted for changes to take effect
      ansible.windows.win_service:
        name: wuauserv
        state: restarted
